// <auto-generated />
using Bulky.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bulky.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250216075316_AddCateogryAsFKtoProduct")]
    partial class AddCateogryAsFKtoProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Bulky.Models.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "Mobile"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "Labtop"
                        });
                });

            modelBuilder.Entity("BulkyWeb.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Khaled Hosseini",
                            CategoryId = 1,
                            Description = "Description for Kite Runner",
                            ISBN = "123456",
                            ListPrice = 100.0,
                            Price = 50.0,
                            Price100 = 40.0,
                            Price50 = 45.0,
                            Title = "Kite Runner"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Haruki Murakami",
                            CategoryId = 2,
                            Description = "Description for Kafka on the Shore",
                            ISBN = "123457",
                            ListPrice = 200.0,
                            Price = 100.0,
                            Price100 = 90.0,
                            Price50 = 95.0,
                            Title = "Kafka on the Shore"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Yuval Noah Harari",
                            CategoryId = 3,
                            Description = "Description for Sapiens",
                            ISBN = "123458",
                            ListPrice = 150.0,
                            Price = 75.0,
                            Price100 = 65.0,
                            Price50 = 70.0,
                            Title = "Sapiens"
                        },
                        new
                        {
                            Id = 4,
                            Author = "F. Scott Fitzgerald",
                            CategoryId = 1,
                            Description = "Description for The Great Gatsby",
                            ISBN = "123459",
                            ListPrice = 120.0,
                            Price = 60.0,
                            Price100 = 50.0,
                            Price50 = 55.0,
                            Title = "The Great Gatsby"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Harper Lee",
                            CategoryId = 2,
                            Description = "Description for To Kill a Mockingbird",
                            ISBN = "123460",
                            ListPrice = 110.0,
                            Price = 55.0,
                            Price100 = 45.0,
                            Price50 = 50.0,
                            Title = "To Kill a Mockingbird"
                        },
                        new
                        {
                            Id = 6,
                            Author = "J.D. Salinger",
                            CategoryId = 3,
                            Description = "Description for The Catcher in the Rye",
                            ISBN = "123461",
                            ListPrice = 130.0,
                            Price = 65.0,
                            Price100 = 55.0,
                            Price50 = 60.0,
                            Title = "The Catcher in the Rye"
                        });
                });

            modelBuilder.Entity("BulkyWeb.Models.Product", b =>
                {
                    b.HasOne("Bulky.Models.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
